name: "Terraform Actions"

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write      # necesario para OIDC
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::453634598212:role/github-oidc-terraform-aws-tfstates-role
          aws-region: us-east-2

      - name: Verificar identidad AWS
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.AWS_BUCKET_KEY_NAME }}" \
            -backend-config="region=us-east-2"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color | tee plan.out
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - name: Leer plan output
        id: plan_output
        run: echo "plan<<EOF" >> $GITHUB_OUTPUT
        run: cat plan.out >> $GITHUB_OUTPUT
        run: echo "EOF" >> $GITHUB_OUTPUT
        if: github.event_name == 'pull_request'

      - name: Comentar resultado del plan en PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const planOutput = `${{ steps.plan_output.outputs.plan }}`;
            const output = `
            #### Terraform Plan ðŸ“–

            <details><summary>Show Plan</summary>

            \`\`\`
            ${planOutput}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });


      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"
