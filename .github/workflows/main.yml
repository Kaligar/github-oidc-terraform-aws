name: "Terraform action"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write      # required for aws oidc
  contents: read       # required for actions/checkout
  pull-requests: write # optional: for PR comments (si agregas luego)

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-oidc-terraform-aws-tfstates-role
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: |
          set -e
          OUT=$(terraform validate -no-color 2>&1 || true)
          echo "$OUT"
          {
            echo "stdout<<EOF"
            echo "$OUT"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Terraform Plan
        id: plan
        env:
          TF_LOG: DEBUG
        run: |
          set -e
          terraform plan -out=tfplan -input=false -lock=false -no-color | tee plan_raw.txt
          terraform show -no-color tfplan > plan.txt
          {
            echo "stdout<<EOF"
            cat plan.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.plan.conclusion == 'success'
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFARE_EMAIL: ${{ secrets.CLOUDFARE_EMAIL }}
          CLOUDFARE_TOKEN: ${{ secrets.CLOUDFARE_TOKEN }}
